"use strict";
function reduce(path) {
    return path.replace(/[^\\^\/^\:]+[\\\/]+\.\.[\\\/]+/ig, '').replace(/([^\:])[\\\/]{2,}/ig, function (capture) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return args[0] + '\/';
    }).replace(/\.[\\\/]+/ig, '');
}
exports.reduce = reduce;
function filename(path) {
    var index = Math.max(path.lastIndexOf('\\'), path.lastIndexOf('\/'));
    if (index > -1)
        return path.substr(index + 1);
    return path;
}
exports.filename = filename;
function pathname(path) {
    var index = Math.max(path.lastIndexOf('\\'), path.lastIndexOf('\/'));
    //console.log('[pathreducer]->pathaname: ', path, index, path.length);
    if (index > -1)
        return path.substr(0, index + 1);
    return path;
}
exports.pathname = pathname;
//# sourceMappingURL=index.js.map